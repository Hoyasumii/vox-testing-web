{
	"openapi": "3.0.0",
	"paths": {
		"/hello-world": {
			"get": {
				"description": "Endpoint para verificar se a API está funcionando corretamente",
				"operationId": "HelloWorldController_getHello",
				"parameters": [],
				"responses": {
					"200": {
						"description": "API funcionando corretamente",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": true },
										"data": {
											"type": "object",
											"properties": {
												"message": {
													"type": "string",
													"example": "Hello World!",
													"description": "Mensagem de saudação"
												}
											},
											"required": ["message"]
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					}
				},
				"summary": "Verificação de saúde da API",
				"tags": ["🔧 Utilitários"]
			}
		},
		"/auth": {
			"post": {
				"description": "Autentica um usuário (médico ou paciente) no sistema e retorna um JWT token",
				"operationId": "LoginController_auth",
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/AuthenticateUser" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Autenticação realizada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "string",
											"description": "JWT token para autenticação",
											"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"400": {
						"description": "Dados de entrada inválidos ou credenciais incorretas",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"429": {
						"description": "Muitas tentativas de login. Tente novamente em alguns minutos.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Autenticar usuário",
				"tags": ["🔐 Autenticação"]
			}
		},
		"/auth/new": {
			"post": {
				"description": "Cria uma nova conta de usuário (médico ou paciente) e retorna o ID do usuário criado",
				"operationId": "RegisterController_create",
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/CreateUser" }
						}
					}
				},
				"responses": {
					"201": {
						"description": "Usuário criado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "string",
											"format": "uuid",
											"description": "ID único do usuário criado",
											"example": "550e8400-e29b-41d4-a716-446655440000"
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"400": {
						"description": "Dados de entrada inválidos",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"409": {
						"description": "Email já está em uso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"429": {
						"description": "Muitas tentativas de registro",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Registrar novo usuário",
				"tags": ["🔐 Autenticação"]
			}
		},
		"/auth/refresh": {
			"post": {
				"description": "Renova um token JWT válido para estender a sessão do usuário",
				"operationId": "RefreshTokenController_refresh",
				"parameters": [
					{
						"name": "authorization",
						"required": true,
						"in": "header",
						"description": "Token JWT para renovação",
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"200": {
						"description": "Token renovado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "string",
											"description": "Novo JWT token renovado",
											"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"400": {
						"description": "Token de autorização não fornecido",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"401": {
						"description": "Token inválido ou expirado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"429": {
						"description": "Muitas tentativas de renovação de token",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Renovar token JWT",
				"tags": ["🔐 Autenticação"]
			}
		},
		"/users/me": {
			"put": {
				"description": "Atualiza as informações do usuário autenticado",
				"operationId": "UpdateUserController_update",
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/UpdateUser" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Dados do usuário atualizados com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "boolean",
											"example": true,
											"description": "Resultado da operação de atualização"
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"400": {
						"description": "Dados de entrada inválidos",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"401": {
						"description": "Token inválido ou expirado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"security": [{ "bearer": [] }],
				"summary": "Atualizar dados do usuário logado",
				"tags": ["👥 Usuários"]
			},
			"delete": {
				"description": "Remove permanentemente a conta do usuário autenticado",
				"operationId": "DeleteUserController_remove",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Conta deletada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "boolean",
											"example": true,
											"description": "Resultado da operação de exclusão"
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"400": {
						"description": "ID de usuário inválido",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"401": {
						"description": "Token inválido ou expirado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"security": [{ "bearer": [] }],
				"summary": "Deletar conta do usuário logado",
				"tags": ["👥 Usuários"]
			},
			"get": {
				"description": "Retorna os dados do usuário autenticado, excluindo informações sensíveis",
				"operationId": "GetUserDataController_get",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Dados do usuário retornados com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"format": "uuid",
													"description": "Identificador único do usuário",
													"example": "550e8400-e29b-41d4-a716-446655440000"
												},
												"name": {
													"type": "string",
													"description": "Nome completo do usuário",
													"example": "João Silva"
												},
												"email": {
													"type": "string",
													"format": "email",
													"description": "Endereço de email do usuário",
													"example": "joao.silva@email.com"
												},
												"type": {
													"type": "string",
													"enum": ["DOCTOR", "PATIENT"],
													"description": "Tipo de usuário",
													"example": "PATIENT"
												},
												"createdAt": {
													"type": "string",
													"format": "date-time",
													"description": "Data e hora de criação do usuário",
													"example": "2024-01-15T10:30:00Z"
												},
												"updatedAt": {
													"type": "string",
													"format": "date-time",
													"description": "Data e hora da última atualização do usuário",
													"example": "2024-01-15T10:30:00Z"
												}
											},
											"required": [
												"id",
												"name",
												"email",
												"type",
												"createdAt",
												"updatedAt"
											]
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"400": {
						"description": "ID de usuário inválido",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"401": {
						"description": "Token inválido ou expirado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"security": [{ "bearer": [] }],
				"summary": "Obter dados do usuário logado",
				"tags": ["👥 Usuários"]
			}
		},
		"/doctors/{doctorId}/availability": {
			"post": {
				"description": "Cria uma nova disponibilidade de horário para o médico",
				"operationId": "CreateDoctorAvailabilityController_create",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "ID único do médico",
						"schema": {
							"format": "uuid",
							"pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$",
							"type": "string"
						}
					},
					{
						"name": "doctorId",
						"required": true,
						"in": "path",
						"description": "ID do médico",
						"schema": { "type": "string" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateDoctorAvailabilityBody"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Disponibilidade criada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "boolean",
											"example": true,
											"description": "Resultado da operação de criação"
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"400": {
						"description": "Dados de entrada inválidos",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"401": {
						"description": "Token inválido ou expirado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"403": {
						"description": "Usuário não tem permissão (deve ser médico)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"404": {
						"description": "Médico não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"409": {
						"description": "Conflito de horários",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"429": {
						"description": "Muitas criações de disponibilidade",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"security": [{ "bearer": [] }],
				"summary": "Criar disponibilidade",
				"tags": ["📅 Disponibilidades"]
			},
			"get": {
				"description": "Retorna todas as disponibilidades de horário do médico especificado",
				"operationId": "GetDoctorAvailabilityController_get",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "ID único do médico",
						"schema": {
							"format": "uuid",
							"pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$",
							"type": "string"
						}
					},
					{
						"name": "doctorId",
						"required": true,
						"in": "path",
						"description": "ID do médico",
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"200": {
						"description": "Lista de disponibilidades retornada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"format": "uuid",
														"description": "Identificador único da disponibilidade",
														"example": "550e8400-e29b-41d4-a716-446655440000"
													},
													"doctorId": {
														"type": "string",
														"format": "uuid",
														"description": "ID do médico",
														"example": "550e8400-e29b-41d4-a716-446655440001"
													},
													"dayOfWeek": {
														"type": "number",
														"minimum": 0,
														"maximum": 6,
														"description": "Dia da semana (0=domingo, 6=sábado)",
														"example": 1
													},
													"startHour": {
														"type": "number",
														"minimum": 0,
														"maximum": 23,
														"description": "Hora de início da disponibilidade (0-23)",
														"example": 8
													},
													"endHour": {
														"type": "number",
														"minimum": 0,
														"maximum": 23,
														"description": "Hora de fim da disponibilidade (0-23)",
														"example": 17
													}
												},
												"required": [
													"id",
													"doctorId",
													"dayOfWeek",
													"startHour",
													"endHour"
												]
											}
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"404": {
						"description": "Médico não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Listar disponibilidades do médico",
				"tags": ["📅 Disponibilidades"]
			},
			"delete": {
				"description": "Remove todas as disponibilidades de horário do médico",
				"operationId": "DeleteDoctorAvailabilityByDoctorIdController_delete",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "ID único do médico",
						"schema": {
							"format": "uuid",
							"pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$",
							"type": "string"
						}
					},
					{
						"name": "doctorId",
						"required": true,
						"in": "path",
						"description": "ID do médico",
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"200": {
						"description": "Disponibilidades deletadas com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "number",
											"description": "Número de disponibilidades deletadas",
											"example": 5
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"404": {
						"description": "Médico não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Deletar todas disponibilidades do médico",
				"tags": ["📅 Disponibilidades"]
			}
		},
		"/doctors/{doctorId}/availability/{id}": {
			"put": {
				"description": "Atualiza uma disponibilidade específica do médico",
				"operationId": "UpdateDoctorAvailabilityController_update",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "ID da disponibilidade",
						"schema": { "type": "string" }
					},
					{
						"name": "doctorId",
						"required": true,
						"in": "path",
						"description": "ID do médico",
						"schema": { "type": "string" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateDoctorAvailabilityBody"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Disponibilidade atualizada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "boolean",
											"description": "Confirmação da atualização",
											"example": true
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"404": {
						"description": "Médico ou disponibilidade não encontrada",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"409": {
						"description": "Conflito de horários",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Atualizar disponibilidade",
				"tags": ["📅 Disponibilidades"]
			},
			"delete": {
				"description": "Remove uma disponibilidade específica do médico",
				"operationId": "DeleteDoctorAvailabilityByIdController_delete",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "ID da disponibilidade",
						"schema": { "type": "string" }
					},
					{
						"name": "doctorId",
						"required": true,
						"in": "path",
						"description": "ID do médico",
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"200": {
						"description": "Disponibilidade deletada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "boolean",
											"description": "Confirmação da exclusão",
											"example": true
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"404": {
						"description": "Disponibilidade não encontrada",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Deletar disponibilidade específica",
				"tags": ["📅 Disponibilidades"]
			}
		},
		"/schedules": {
			"post": {
				"description": "Cria um novo agendamento médico (apenas pacientes)",
				"operationId": "CreateScheduleController_create",
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/CreateScheduleBody" }
						}
					}
				},
				"responses": {
					"201": {
						"description": "Agendamento criado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"format": "uuid",
													"description": "Identificador único do agendamento",
													"example": "550e8400-e29b-41d4-a716-446655440000"
												},
												"status": {
													"type": "string",
													"enum": [
														"SCHEDULED",
														"CONFIRMED",
														"COMPLETED",
														"CANCELED"
													],
													"description": "Status do agendamento",
													"example": "SCHEDULED"
												},
												"availabilityId": {
													"type": "string",
													"format": "uuid",
													"description": "ID da disponibilidade do médico",
													"example": "550e8400-e29b-41d4-a716-446655440001"
												},
												"patientId": {
													"type": "string",
													"format": "uuid",
													"description": "ID do paciente",
													"example": "550e8400-e29b-41d4-a716-446655440002"
												},
												"doctorId": {
													"type": "string",
													"format": "uuid",
													"description": "ID do médico",
													"example": "550e8400-e29b-41d4-a716-446655440003"
												},
												"scheduledAt": {
													"type": "string",
													"format": "date-time",
													"description": "Data e hora do agendamento",
													"example": "2025-08-17T10:00:00Z"
												}
											},
											"required": [
												"id",
												"status",
												"availabilityId",
												"patientId",
												"doctorId",
												"scheduledAt"
											]
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"400": {
						"description": "Dados inválidos",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"401": {
						"description": "Token inválido ou expirado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"403": {
						"description": "Usuário não tem permissão (deve ser paciente)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"409": {
						"description": "Conflito de horários ou disponibilidade não encontrada",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"429": {
						"description": "Muitas tentativas de agendamento. Aguarde um momento.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"security": [{ "bearer": [] }],
				"summary": "Criar agendamento",
				"tags": ["🗓️ Agendamentos"]
			}
		},
		"/schedules/me": {
			"get": {
				"description": "Retorna todos os agendamentos do usuário logado (paciente ou médico)",
				"operationId": "GetSchedulesByUserController_get",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Lista de agendamentos retornada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"format": "uuid",
														"description": "Identificador único do agendamento",
														"example": "550e8400-e29b-41d4-a716-446655440000"
													},
													"status": {
														"type": "string",
														"enum": [
															"PENDING",
															"CONFIRMED",
															"COMPLETED",
															"CANCELLED"
														],
														"description": "Status do agendamento",
														"example": "CONFIRMED"
													},
													"availabilityId": {
														"type": "string",
														"format": "uuid",
														"description": "ID da disponibilidade do médico",
														"example": "550e8400-e29b-41d4-a716-446655440001"
													},
													"patientId": {
														"type": "string",
														"format": "uuid",
														"description": "ID do paciente",
														"example": "550e8400-e29b-41d4-a716-446655440002"
													},
													"doctorId": {
														"type": "string",
														"format": "uuid",
														"description": "ID do médico",
														"example": "550e8400-e29b-41d4-a716-446655440003"
													},
													"scheduledAt": {
														"type": "string",
														"format": "date-time",
														"description": "Data e hora do agendamento",
														"example": "2024-01-15T14:00:00Z"
													}
												},
												"required": [
													"id",
													"status",
													"availabilityId",
													"patientId",
													"doctorId",
													"scheduledAt"
												]
											},
											"description": "Lista de agendamentos do usuário"
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"400": {
						"description": "ID de usuário inválido",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"401": {
						"description": "Token inválido ou expirado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"security": [{ "bearer": [] }],
				"summary": "Listar agendamentos do usuário logado",
				"tags": ["🗓️ Agendamentos"]
			}
		},
		"/schedules/{id}": {
			"get": {
				"description": "Retorna os detalhes de um agendamento específico",
				"operationId": "GetScheduleByIdController_get",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "ID do agendamento",
						"schema": {
							"format": "uuid",
							"pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Agendamento retornado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"format": "uuid",
													"description": "Identificador único do agendamento",
													"example": "550e8400-e29b-41d4-a716-446655440000"
												},
												"status": {
													"type": "string",
													"enum": [
														"SCHEDULED",
														"CONFIRMED",
														"COMPLETED",
														"CANCELED"
													],
													"description": "Status do agendamento",
													"example": "SCHEDULED"
												},
												"availabilityId": {
													"type": "string",
													"format": "uuid",
													"description": "ID da disponibilidade do médico",
													"example": "550e8400-e29b-41d4-a716-446655440001"
												},
												"patientId": {
													"type": "string",
													"format": "uuid",
													"description": "ID do paciente",
													"example": "550e8400-e29b-41d4-a716-446655440002"
												},
												"doctorId": {
													"type": "string",
													"format": "uuid",
													"description": "ID do médico",
													"example": "550e8400-e29b-41d4-a716-446655440003"
												},
												"scheduledAt": {
													"type": "string",
													"format": "date-time",
													"description": "Data e hora do agendamento",
													"example": "2025-08-17T10:00:00Z"
												}
											},
											"required": [
												"id",
												"status",
												"availabilityId",
												"patientId",
												"doctorId",
												"scheduledAt"
											]
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"404": {
						"description": "Agendamento não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Obter agendamento por ID",
				"tags": ["🗓️ Agendamentos"]
			},
			"delete": {
				"description": "Remove um agendamento do sistema",
				"operationId": "DeleteScheduleController_delete",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "ID do agendamento",
						"schema": {
							"format": "uuid",
							"pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Agendamento deletado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "boolean",
											"description": "Confirmação da exclusão",
											"example": true
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"404": {
						"description": "Agendamento não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Deletar agendamento",
				"tags": ["🗓️ Agendamentos"]
			}
		},
		"/schedules/{id}/cancel": {
			"put": {
				"description": "Cancela um agendamento específico",
				"operationId": "CancelScheduleController_cancel",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "ID do agendamento",
						"schema": {
							"format": "uuid",
							"pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Agendamento cancelado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "boolean",
											"description": "Confirmação do cancelamento",
											"example": true
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"404": {
						"description": "Agendamento não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"409": {
						"description": "Agendamento não pode ser cancelado (já realizado ou cancelado)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Cancelar agendamento",
				"tags": ["🗓️ Agendamentos"]
			}
		},
		"/schedules/{id}/complete": {
			"put": {
				"description": "Marca um agendamento como concluído (apenas médicos)",
				"operationId": "CompleteScheduleController_complete",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "ID do agendamento",
						"schema": {
							"format": "uuid",
							"pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Agendamento marcado como concluído com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "boolean",
											"description": "Confirmação da conclusão",
											"example": true
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"403": {
						"description": "Usuário não tem permissão (deve ser médico)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"404": {
						"description": "Agendamento não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					},
					"409": {
						"description": "Agendamento não pode ser concluído (já cancelado ou concluído)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Marcar agendamento como concluído",
				"tags": ["🗓️ Agendamentos"]
			}
		},
		"/availability/slots": {
			"get": {
				"description": "Busca horários disponíveis para agendamento com filtros opcionais",
				"operationId": "GetAvailableSlotsController_get",
				"parameters": [
					{
						"name": "doctorId",
						"required": false,
						"in": "query",
						"description": "ID do médico (opcional)",
						"schema": {
							"format": "uuid",
							"pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$",
							"type": "string"
						}
					},
					{
						"name": "date",
						"required": false,
						"in": "query",
						"description": "Data específica (formato YYYY-MM-DD, opcional)",
						"schema": { "type": "string" }
					},
					{
						"name": "startDate",
						"required": false,
						"in": "query",
						"description": "Data inicial do período (formato YYYY-MM-DD, opcional)",
						"schema": { "type": "string" }
					},
					{
						"name": "endDate",
						"required": false,
						"in": "query",
						"description": "Data final do período (formato YYYY-MM-DD, opcional)",
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"200": {
						"description": "Lista de slots disponíveis retornada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": true },
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"availabilityId": {
														"type": "string",
														"format": "uuid",
														"description": "ID da disponibilidade do médico",
														"example": "550e8400-e29b-41d4-a716-446655440000"
													},
													"doctorId": {
														"type": "string",
														"format": "uuid",
														"description": "ID do médico",
														"example": "550e8400-e29b-41d4-a716-446655440001"
													},
													"dayOfWeek": {
														"type": "number",
														"minimum": 0,
														"maximum": 6,
														"description": "Dia da semana (0=domingo, 6=sábado)",
														"example": 1
													},
													"startHour": {
														"type": "number",
														"minimum": 0,
														"maximum": 23,
														"description": "Hora de início da disponibilidade (0-23)",
														"example": 9
													},
													"endHour": {
														"type": "number",
														"minimum": 0,
														"maximum": 23,
														"description": "Hora de fim da disponibilidade (0-23)",
														"example": 17
													},
													"availableDate": {
														"type": "string",
														"format": "date-time",
														"description": "Data específica disponível para agendamento",
														"example": "2025-08-17T00:00:00Z"
													},
													"isAvailable": {
														"type": "boolean",
														"description": "Indica se o horário está disponível para agendamento",
														"example": true
													}
												},
												"required": [
													"availabilityId",
													"doctorId",
													"dayOfWeek",
													"startHour",
													"endHour",
													"availableDate",
													"isAvailable"
												]
											}
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"400": {
						"description": "Parâmetros de query inválidos",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Buscar slots disponíveis",
				"tags": ["🔍 Busca de Horários"]
			}
		},
		"/doctors/{doctorId}/schedules": {
			"get": {
				"description": "Retorna todos os agendamentos de um médico específico",
				"operationId": "GetDoctorSchedulesController_get",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "ID único do médico",
						"schema": {
							"format": "uuid",
							"pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$",
							"type": "string"
						}
					},
					{
						"name": "doctorId",
						"required": true,
						"in": "path",
						"description": "ID do médico",
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"200": {
						"description": "Lista de agendamentos do médico retornada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": true,
											"description": "Indica se a operação foi bem-sucedida"
										},
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"format": "uuid",
														"description": "Identificador único do agendamento",
														"example": "550e8400-e29b-41d4-a716-446655440000"
													},
													"status": {
														"type": "string",
														"enum": ["SCHEDULED", "CANCELED", "COMPLETED"],
														"description": "Status do agendamento",
														"example": "SCHEDULED"
													},
													"availabilityId": {
														"type": "string",
														"format": "uuid",
														"description": "ID da disponibilidade do médico",
														"example": "550e8400-e29b-41d4-a716-446655440001"
													},
													"patientId": {
														"type": "string",
														"format": "uuid",
														"description": "ID do paciente",
														"example": "550e8400-e29b-41d4-a716-446655440002"
													},
													"doctorId": {
														"type": "string",
														"format": "uuid",
														"description": "ID do médico",
														"example": "550e8400-e29b-41d4-a716-446655440003"
													},
													"scheduledAt": {
														"type": "string",
														"format": "date-time",
														"description": "Data e hora do agendamento",
														"example": "2025-08-17T10:00:00Z"
													}
												},
												"required": [
													"id",
													"status",
													"availabilityId",
													"patientId",
													"doctorId",
													"scheduledAt"
												]
											}
										}
									},
									"required": ["success", "data"]
								}
							}
						}
					},
					"404": {
						"description": "Médico não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": { "type": "boolean", "example": false }
									}
								}
							}
						}
					}
				},
				"summary": "Agendamentos do médico",
				"tags": ["📊 Relatórios"]
			}
		}
	},
	"info": {
		"title": "Vox Testing - Alan Reis",
		"description": "",
		"version": "1.0",
		"contact": {}
	},
	"tags": [],
	"servers": [],
	"components": {
		"schemas": {
			"AuthenticateUser": {
				"type": "object",
				"properties": {
					"email": {
						"description": "Email do usuário para autenticação",
						"type": "string",
						"format": "email",
						"pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
					},
					"password": {
						"description": "Senha do usuário que deve conter no mínimo 7 caracteres, incluindo ao menos uma letra maiúscula, uma minúscula e um caractere especial",
						"type": "string",
						"minLength": 7
					}
				},
				"required": ["email", "password"]
			},
			"CreateUser": {
				"type": "object",
				"properties": {
					"name": {
						"description": "Nome completo do usuário",
						"type": "string",
						"minLength": 1
					},
					"email": {
						"description": "Endereço de email único do usuário",
						"type": "string",
						"format": "email",
						"pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
					},
					"password": {
						"description": "Senha do usuário que deve conter no mínimo 7 caracteres, incluindo ao menos uma letra maiúscula, uma minúscula e um caractere especial",
						"type": "string",
						"minLength": 7
					},
					"type": {
						"description": "Tipo de usuário no sistema: médico ou paciente",
						"type": "string",
						"enum": ["DOCTOR", "PATIENT"]
					}
				},
				"required": ["name", "email", "password"]
			},
			"UpdateUser": {
				"type": "object",
				"properties": {
					"name": {
						"description": "Nome completo do usuário",
						"type": "string",
						"minLength": 1
					},
					"email": {
						"description": "Endereço de email único do usuário",
						"type": "string",
						"format": "email",
						"pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
					},
					"type": {
						"description": "Tipo de usuário no sistema: médico ou paciente",
						"type": "string",
						"enum": ["DOCTOR", "PATIENT"]
					},
					"password": {
						"description": "Senha do usuário que deve conter no mínimo 7 caracteres, incluindo ao menos uma letra maiúscula, uma minúscula e um caractere especial",
						"type": "string",
						"minLength": 7
					}
				}
			},
			"CreateDoctorAvailabilityBody": {
				"type": "object",
				"properties": {
					"doctorId": {
						"description": "ID do médico",
						"type": "string",
						"format": "uuid",
						"pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
					},
					"dayOfWeek": {
						"description": "Dia da semana (0=domingo, 6=sábado)",
						"type": "integer",
						"minimum": 0,
						"maximum": 6
					},
					"startHour": {
						"description": "Hora de início da disponibilidade (0-22)",
						"type": "number",
						"minimum": 0,
						"maximum": 22
					},
					"endHour": {
						"description": "Hora de fim da disponibilidade (0-23)",
						"type": "number",
						"minimum": 0,
						"maximum": 23
					}
				},
				"required": ["doctorId", "dayOfWeek", "startHour", "endHour"]
			},
			"UpdateDoctorAvailabilityBody": {
				"type": "object",
				"properties": {
					"dayOfWeek": {
						"description": "Dia da semana (0=domingo, 6=sábado)",
						"type": "integer",
						"minimum": 0,
						"maximum": 6
					},
					"startHour": {
						"description": "Hora de início da disponibilidade (0-22)",
						"type": "number",
						"minimum": 0,
						"maximum": 22
					},
					"endHour": {
						"description": "Hora de fim da disponibilidade (0-23)",
						"type": "number",
						"minimum": 0,
						"maximum": 23
					}
				}
			},
			"CreateScheduleBody": {
				"type": "object",
				"properties": {
					"availabilityId": {
						"description": "ID da disponibilidade do médico sendo agendada",
						"type": "string",
						"format": "uuid",
						"pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
					},
					"doctorId": {
						"description": "ID do médico para o agendamento",
						"type": "string",
						"format": "uuid",
						"pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
					},
					"scheduledAt": {
						"description": "Data e hora específica do agendamento (ISO format)",
						"type": "string",
						"format": "date-time",
						"pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
					}
				},
				"required": ["availabilityId", "doctorId", "scheduledAt"]
			}
		}
	}
}
